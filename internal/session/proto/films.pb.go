// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: proto/films.proto

package session

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilmPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Preview     string  `protobuf:"bytes,2,opt,name=preview,proto3" json:"preview,omitempty"`
	Title       string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Director    string  `protobuf:"bytes,4,opt,name=director,proto3" json:"director,omitempty"`
	AvgScore    float32 `protobuf:"fixed32,5,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
	ScoresCount uint64  `protobuf:"varint,6,opt,name=scores_count,json=scoresCount,proto3" json:"scores_count,omitempty"`
	Duration    uint32  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	AgeLimit    uint32  `protobuf:"varint,8,opt,name=age_limit,json=ageLimit,proto3" json:"age_limit,omitempty"`
	IsSerial    bool    `protobuf:"varint,9,opt,name=is_serial,json=isSerial,proto3" json:"is_serial,omitempty"`
}

func (x *FilmPreview) Reset() {
	*x = FilmPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmPreview) ProtoMessage() {}

func (x *FilmPreview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmPreview.ProtoReflect.Descriptor instead.
func (*FilmPreview) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{0}
}

func (x *FilmPreview) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FilmPreview) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *FilmPreview) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FilmPreview) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *FilmPreview) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *FilmPreview) GetScoresCount() uint64 {
	if x != nil {
		return x.ScoresCount
	}
	return 0
}

func (x *FilmPreview) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FilmPreview) GetAgeLimit() uint32 {
	if x != nil {
		return x.AgeLimit
	}
	return 0
}

func (x *FilmPreview) GetIsSerial() bool {
	if x != nil {
		return x.IsSerial
	}
	return false
}

type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link  string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{1}
}

func (x *Episode) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Season struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Episodes []*Episode `protobuf:"bytes,1,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *Season) Reset() {
	*x = Season{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Season) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Season) ProtoMessage() {}

func (x *Season) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Season.ProtoReflect.Descriptor instead.
func (*Season) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{2}
}

func (x *Season) GetEpisodes() []*Episode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{3}
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Genre) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FilmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Preview     string                 `protobuf:"bytes,2,opt,name=preview,proto3" json:"preview,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Link        string                 `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	Director    string                 `protobuf:"bytes,5,opt,name=director,proto3" json:"director,omitempty"`
	AvgScore    float32                `protobuf:"fixed32,6,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
	ScoresCount uint64                 `protobuf:"varint,7,opt,name=scores_count,json=scoresCount,proto3" json:"scores_count,omitempty"`
	Duration    uint32                 `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
	Data        string                 `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	AgeLimit    uint32                 `protobuf:"varint,10,opt,name=age_limit,json=ageLimit,proto3" json:"age_limit,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
	Genres      []*Genre               `protobuf:"bytes,12,rep,name=genres,proto3" json:"genres,omitempty"`
	IsSerial    bool                   `protobuf:"varint,13,opt,name=is_serial,json=isSerial,proto3" json:"is_serial,omitempty"`
	Seasons     []*Season              `protobuf:"bytes,14,rep,name=seasons,proto3" json:"seasons,omitempty"`
}

func (x *FilmData) Reset() {
	*x = FilmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmData) ProtoMessage() {}

func (x *FilmData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmData.ProtoReflect.Descriptor instead.
func (*FilmData) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{4}
}

func (x *FilmData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FilmData) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *FilmData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FilmData) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FilmData) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *FilmData) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *FilmData) GetScoresCount() uint64 {
	if x != nil {
		return x.ScoresCount
	}
	return 0
}

func (x *FilmData) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FilmData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FilmData) GetAgeLimit() uint32 {
	if x != nil {
		return x.AgeLimit
	}
	return 0
}

func (x *FilmData) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *FilmData) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *FilmData) GetIsSerial() bool {
	if x != nil {
		return x.IsSerial
	}
	return false
}

func (x *FilmData) GetSeasons() []*Season {
	if x != nil {
		return x.Seasons
	}
	return nil
}

type ActorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Birthday      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Career        string                 `protobuf:"bytes,5,opt,name=career,proto3" json:"career,omitempty"`
	Spouse        string                 `protobuf:"bytes,6,opt,name=spouse,proto3" json:"spouse,omitempty"`
	FilmsPreviews []*FilmPreview         `protobuf:"bytes,7,rep,name=films_previews,json=filmsPreviews,proto3" json:"films_previews,omitempty"`
	Birthplace    string                 `protobuf:"bytes,8,opt,name=birthplace,proto3" json:"birthplace,omitempty"`
	Height        uint32                 `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ActorData) Reset() {
	*x = ActorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorData) ProtoMessage() {}

func (x *ActorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorData.ProtoReflect.Descriptor instead.
func (*ActorData) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{5}
}

func (x *ActorData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ActorData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActorData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ActorData) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *ActorData) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *ActorData) GetSpouse() string {
	if x != nil {
		return x.Spouse
	}
	return ""
}

func (x *ActorData) GetFilmsPreviews() []*FilmPreview {
	if x != nil {
		return x.FilmsPreviews
	}
	return nil
}

func (x *ActorData) GetBirthplace() string {
	if x != nil {
		return x.Birthplace
	}
	return ""
}

func (x *ActorData) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ActorPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ActorPreview) Reset() {
	*x = ActorPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorPreview) ProtoMessage() {}

func (x *ActorPreview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorPreview.ProtoReflect.Descriptor instead.
func (*ActorPreview) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{6}
}

func (x *ActorPreview) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ActorPreview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActorPreview) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type StatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *StatusMessage) Reset() {
	*x = StatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMessage) ProtoMessage() {}

func (x *StatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMessage.ProtoReflect.Descriptor instead.
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{7}
}

func (x *StatusMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AllFilmsPreviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllFilmsPreviewsRequest) Reset() {
	*x = AllFilmsPreviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmsPreviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmsPreviewsRequest) ProtoMessage() {}

func (x *AllFilmsPreviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmsPreviewsRequest.ProtoReflect.Descriptor instead.
func (*AllFilmsPreviewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{8}
}

type AllFilmsPreviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FilmPreview `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *AllFilmsPreviewsResponse) Reset() {
	*x = AllFilmsPreviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmsPreviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmsPreviewsResponse) ProtoMessage() {}

func (x *AllFilmsPreviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmsPreviewsResponse.ProtoReflect.Descriptor instead.
func (*AllFilmsPreviewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{9}
}

func (x *AllFilmsPreviewsResponse) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

type FilmDataByUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FilmDataByUuidRequest) Reset() {
	*x = FilmDataByUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmDataByUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmDataByUuidRequest) ProtoMessage() {}

func (x *FilmDataByUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmDataByUuidRequest.ProtoReflect.Descriptor instead.
func (*FilmDataByUuidRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{10}
}

func (x *FilmDataByUuidRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FilmDataByUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmData *FilmData `protobuf:"bytes,1,opt,name=film_data,json=filmData,proto3" json:"film_data,omitempty"`
}

func (x *FilmDataByUuidResponse) Reset() {
	*x = FilmDataByUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmDataByUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmDataByUuidResponse) ProtoMessage() {}

func (x *FilmDataByUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmDataByUuidResponse.ProtoReflect.Descriptor instead.
func (*FilmDataByUuidResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{11}
}

func (x *FilmDataByUuidResponse) GetFilmData() *FilmData {
	if x != nil {
		return x.FilmData
	}
	return nil
}

type FilmPreviewByUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FilmPreviewByUuidRequest) Reset() {
	*x = FilmPreviewByUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmPreviewByUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmPreviewByUuidRequest) ProtoMessage() {}

func (x *FilmPreviewByUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmPreviewByUuidRequest.ProtoReflect.Descriptor instead.
func (*FilmPreviewByUuidRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{12}
}

func (x *FilmPreviewByUuidRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FilmPreviewByUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmPreview *FilmPreview `protobuf:"bytes,1,opt,name=film_preview,json=filmPreview,proto3" json:"film_preview,omitempty"`
}

func (x *FilmPreviewByUuidResponse) Reset() {
	*x = FilmPreviewByUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmPreviewByUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmPreviewByUuidResponse) ProtoMessage() {}

func (x *FilmPreviewByUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmPreviewByUuidResponse.ProtoReflect.Descriptor instead.
func (*FilmPreviewByUuidResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{13}
}

func (x *FilmPreviewByUuidResponse) GetFilmPreview() *FilmPreview {
	if x != nil {
		return x.FilmPreview
	}
	return nil
}

type AllFilmCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *AllFilmCommentsRequest) Reset() {
	*x = AllFilmCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmCommentsRequest) ProtoMessage() {}

func (x *AllFilmCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmCommentsRequest.ProtoReflect.Descriptor instead.
func (*AllFilmCommentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{14}
}

func (x *AllFilmCommentsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type AllFilmCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *AllFilmCommentsResponse) Reset() {
	*x = AllFilmCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmCommentsResponse) ProtoMessage() {}

func (x *AllFilmCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmCommentsResponse.ProtoReflect.Descriptor instead.
func (*AllFilmCommentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{15}
}

func (x *AllFilmCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type AllFilmActorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *AllFilmActorsRequest) Reset() {
	*x = AllFilmActorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmActorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmActorsRequest) ProtoMessage() {}

func (x *AllFilmActorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmActorsRequest.ProtoReflect.Descriptor instead.
func (*AllFilmActorsRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{16}
}

func (x *AllFilmActorsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type AllFilmActorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorPreviews []*ActorPreview `protobuf:"bytes,1,rep,name=actor_previews,json=actorPreviews,proto3" json:"actor_previews,omitempty"`
}

func (x *AllFilmActorsResponse) Reset() {
	*x = AllFilmActorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFilmActorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilmActorsResponse) ProtoMessage() {}

func (x *AllFilmActorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilmActorsResponse.ProtoReflect.Descriptor instead.
func (*AllFilmActorsResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{17}
}

func (x *AllFilmActorsResponse) GetActorPreviews() []*ActorPreview {
	if x != nil {
		return x.ActorPreviews
	}
	return nil
}

type RemoveFilmByUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RemoveFilmByUuidRequest) Reset() {
	*x = RemoveFilmByUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFilmByUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFilmByUuidRequest) ProtoMessage() {}

func (x *RemoveFilmByUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFilmByUuidRequest.ProtoReflect.Descriptor instead.
func (*RemoveFilmByUuidRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveFilmByUuidRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type RemoveFilmByUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFilmByUuidResponse) Reset() {
	*x = RemoveFilmByUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFilmByUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFilmByUuidResponse) ProtoMessage() {}

func (x *RemoveFilmByUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFilmByUuidResponse.ProtoReflect.Descriptor instead.
func (*RemoveFilmByUuidResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{19}
}

type ActorDataByUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ActorDataByUuidRequest) Reset() {
	*x = ActorDataByUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorDataByUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorDataByUuidRequest) ProtoMessage() {}

func (x *ActorDataByUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorDataByUuidRequest.ProtoReflect.Descriptor instead.
func (*ActorDataByUuidRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{20}
}

func (x *ActorDataByUuidRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ActorDataByUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *ActorData `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
}

func (x *ActorDataByUuidResponse) Reset() {
	*x = ActorDataByUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorDataByUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorDataByUuidResponse) ProtoMessage() {}

func (x *ActorDataByUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorDataByUuidResponse.ProtoReflect.Descriptor instead.
func (*ActorDataByUuidResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{21}
}

func (x *ActorDataByUuidResponse) GetActor() *ActorData {
	if x != nil {
		return x.Actor
	}
	return nil
}

type ActorsByFilmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ActorsByFilmRequest) Reset() {
	*x = ActorsByFilmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorsByFilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorsByFilmRequest) ProtoMessage() {}

func (x *ActorsByFilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorsByFilmRequest.ProtoReflect.Descriptor instead.
func (*ActorsByFilmRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{22}
}

func (x *ActorsByFilmRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ActorsByFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actors []*ActorPreview `protobuf:"bytes,1,rep,name=actors,proto3" json:"actors,omitempty"`
}

func (x *ActorsByFilmResponse) Reset() {
	*x = ActorsByFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorsByFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorsByFilmResponse) ProtoMessage() {}

func (x *ActorsByFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorsByFilmResponse.ProtoReflect.Descriptor instead.
func (*ActorsByFilmResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{23}
}

func (x *ActorsByFilmResponse) GetActors() []*ActorPreview {
	if x != nil {
		return x.Actors
	}
	return nil
}

type PutFavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmUuid string `protobuf:"bytes,1,opt,name=film_uuid,json=filmUuid,proto3" json:"film_uuid,omitempty"`
	UserUuid string `protobuf:"bytes,2,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *PutFavoriteRequest) Reset() {
	*x = PutFavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFavoriteRequest) ProtoMessage() {}

func (x *PutFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFavoriteRequest.ProtoReflect.Descriptor instead.
func (*PutFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{24}
}

func (x *PutFavoriteRequest) GetFilmUuid() string {
	if x != nil {
		return x.FilmUuid
	}
	return ""
}

func (x *PutFavoriteRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type PutFavoriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutFavoriteResponse) Reset() {
	*x = PutFavoriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFavoriteResponse) ProtoMessage() {}

func (x *PutFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFavoriteResponse.ProtoReflect.Descriptor instead.
func (*PutFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{25}
}

type DeleteFavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmUuid string `protobuf:"bytes,1,opt,name=film_uuid,json=filmUuid,proto3" json:"film_uuid,omitempty"`
	UserUuid string `protobuf:"bytes,2,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *DeleteFavoriteRequest) Reset() {
	*x = DeleteFavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFavoriteRequest) ProtoMessage() {}

func (x *DeleteFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFavoriteRequest.ProtoReflect.Descriptor instead.
func (*DeleteFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteFavoriteRequest) GetFilmUuid() string {
	if x != nil {
		return x.FilmUuid
	}
	return ""
}

func (x *DeleteFavoriteRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type DeleteFavoriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFavoriteResponse) Reset() {
	*x = DeleteFavoriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFavoriteResponse) ProtoMessage() {}

func (x *DeleteFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFavoriteResponse.ProtoReflect.Descriptor instead.
func (*DeleteFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{27}
}

type GetAllFavoriteFilmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *GetAllFavoriteFilmsRequest) Reset() {
	*x = GetAllFavoriteFilmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFavoriteFilmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFavoriteFilmsRequest) ProtoMessage() {}

func (x *GetAllFavoriteFilmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFavoriteFilmsRequest.ProtoReflect.Descriptor instead.
func (*GetAllFavoriteFilmsRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{28}
}

func (x *GetAllFavoriteFilmsRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type GetAllFavoriteFilmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FilmPreview `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *GetAllFavoriteFilmsResponse) Reset() {
	*x = GetAllFavoriteFilmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFavoriteFilmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFavoriteFilmsResponse) ProtoMessage() {}

func (x *GetAllFavoriteFilmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFavoriteFilmsResponse.ProtoReflect.Descriptor instead.
func (*GetAllFavoriteFilmsResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllFavoriteFilmsResponse) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

type GetAllFilmsByGenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenreUuid string `protobuf:"bytes,1,opt,name=genre_uuid,json=genreUuid,proto3" json:"genre_uuid,omitempty"`
}

func (x *GetAllFilmsByGenreRequest) Reset() {
	*x = GetAllFilmsByGenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFilmsByGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFilmsByGenreRequest) ProtoMessage() {}

func (x *GetAllFilmsByGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFilmsByGenreRequest.ProtoReflect.Descriptor instead.
func (*GetAllFilmsByGenreRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllFilmsByGenreRequest) GetGenreUuid() string {
	if x != nil {
		return x.GenreUuid
	}
	return ""
}

type GetAllFilmsByGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FilmPreview `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *GetAllFilmsByGenreResponse) Reset() {
	*x = GetAllFilmsByGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFilmsByGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFilmsByGenreResponse) ProtoMessage() {}

func (x *GetAllFilmsByGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFilmsByGenreResponse.ProtoReflect.Descriptor instead.
func (*GetAllFilmsByGenreResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{31}
}

func (x *GetAllFilmsByGenreResponse) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

type GetAllGenresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllGenresRequest) Reset() {
	*x = GetAllGenresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGenresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGenresRequest) ProtoMessage() {}

func (x *GetAllGenresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGenresRequest.ProtoReflect.Descriptor instead.
func (*GetAllGenresRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{32}
}

type GenreFilms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genre     string         `protobuf:"bytes,1,opt,name=genre,proto3" json:"genre,omitempty"`
	GenreUuid string         `protobuf:"bytes,2,opt,name=genre_uuid,json=genreUuid,proto3" json:"genre_uuid,omitempty"`
	Films     []*FilmPreview `protobuf:"bytes,3,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *GenreFilms) Reset() {
	*x = GenreFilms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenreFilms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreFilms) ProtoMessage() {}

func (x *GenreFilms) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreFilms.ProtoReflect.Descriptor instead.
func (*GenreFilms) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{33}
}

func (x *GenreFilms) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *GenreFilms) GetGenreUuid() string {
	if x != nil {
		return x.GenreUuid
	}
	return ""
}

func (x *GenreFilms) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

type GetAllGenresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genres []*GenreFilms `protobuf:"bytes,1,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *GetAllGenresResponse) Reset() {
	*x = GetAllGenresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGenresResponse) ProtoMessage() {}

func (x *GetAllGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGenresResponse.ProtoReflect.Descriptor instead.
func (*GetAllGenresResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{34}
}

func (x *GetAllGenresResponse) GetGenres() []*GenreFilms {
	if x != nil {
		return x.Genres
	}
	return nil
}

type FilmDataToAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	IsSerial    bool                   `protobuf:"varint,2,opt,name=is_serial,json=isSerial,proto3" json:"is_serial,omitempty"`
	Preview     string                 `protobuf:"bytes,3,opt,name=preview,proto3" json:"preview,omitempty"`
	Director    string                 `protobuf:"bytes,4,opt,name=director,proto3" json:"director,omitempty"`
	Data        string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	AgeLimit    uint32                 `protobuf:"varint,6,opt,name=ageLimit,proto3" json:"ageLimit,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=publishedAt,proto3" json:"publishedAt,omitempty"`
	Genres      []string               `protobuf:"bytes,8,rep,name=genres,proto3" json:"genres,omitempty"`
	Duration    uint32                 `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Link        string                 `protobuf:"bytes,10,opt,name=link,proto3" json:"link,omitempty"`
	Seasons     []*Season              `protobuf:"bytes,11,rep,name=seasons,proto3" json:"seasons,omitempty"`
}

func (x *FilmDataToAdd) Reset() {
	*x = FilmDataToAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmDataToAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmDataToAdd) ProtoMessage() {}

func (x *FilmDataToAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmDataToAdd.ProtoReflect.Descriptor instead.
func (*FilmDataToAdd) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{35}
}

func (x *FilmDataToAdd) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FilmDataToAdd) GetIsSerial() bool {
	if x != nil {
		return x.IsSerial
	}
	return false
}

func (x *FilmDataToAdd) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *FilmDataToAdd) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *FilmDataToAdd) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FilmDataToAdd) GetAgeLimit() uint32 {
	if x != nil {
		return x.AgeLimit
	}
	return 0
}

func (x *FilmDataToAdd) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *FilmDataToAdd) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *FilmDataToAdd) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FilmDataToAdd) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FilmDataToAdd) GetSeasons() []*Season {
	if x != nil {
		return x.Seasons
	}
	return nil
}

type ActorDataToAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string                 `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	BirthdayAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=birthdayAt,proto3" json:"birthdayAt,omitempty"`
	Career     string                 `protobuf:"bytes,4,opt,name=career,proto3" json:"career,omitempty"`
	Height     uint32                 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	BirthPlace string                 `protobuf:"bytes,6,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	Spouse     string                 `protobuf:"bytes,7,opt,name=spouse,proto3" json:"spouse,omitempty"`
}

func (x *ActorDataToAdd) Reset() {
	*x = ActorDataToAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorDataToAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorDataToAdd) ProtoMessage() {}

func (x *ActorDataToAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorDataToAdd.ProtoReflect.Descriptor instead.
func (*ActorDataToAdd) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{36}
}

func (x *ActorDataToAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActorDataToAdd) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ActorDataToAdd) GetBirthdayAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthdayAt
	}
	return nil
}

func (x *ActorDataToAdd) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *ActorDataToAdd) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ActorDataToAdd) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *ActorDataToAdd) GetSpouse() string {
	if x != nil {
		return x.Spouse
	}
	return ""
}

type DirectorDataToAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Avatar   string                 `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Birthday *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *DirectorDataToAdd) Reset() {
	*x = DirectorDataToAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectorDataToAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectorDataToAdd) ProtoMessage() {}

func (x *DirectorDataToAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectorDataToAdd.ProtoReflect.Descriptor instead.
func (*DirectorDataToAdd) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{37}
}

func (x *DirectorDataToAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectorDataToAdd) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *DirectorDataToAdd) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

type FilmToAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmData *FilmDataToAdd     `protobuf:"bytes,1,opt,name=filmData,proto3" json:"filmData,omitempty"`
	Actors   []*ActorDataToAdd  `protobuf:"bytes,2,rep,name=actors,proto3" json:"actors,omitempty"`
	Director *DirectorDataToAdd `protobuf:"bytes,3,opt,name=director,proto3" json:"director,omitempty"`
}

func (x *FilmToAdd) Reset() {
	*x = FilmToAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmToAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmToAdd) ProtoMessage() {}

func (x *FilmToAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmToAdd.ProtoReflect.Descriptor instead.
func (*FilmToAdd) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{38}
}

func (x *FilmToAdd) GetFilmData() *FilmDataToAdd {
	if x != nil {
		return x.FilmData
	}
	return nil
}

func (x *FilmToAdd) GetActors() []*ActorDataToAdd {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *FilmToAdd) GetDirector() *DirectorDataToAdd {
	if x != nil {
		return x.Director
	}
	return nil
}

type AddFilmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmData *FilmToAdd `protobuf:"bytes,1,opt,name=filmData,proto3" json:"filmData,omitempty"`
}

func (x *AddFilmRequest) Reset() {
	*x = AddFilmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFilmRequest) ProtoMessage() {}

func (x *AddFilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFilmRequest.ProtoReflect.Descriptor instead.
func (*AddFilmRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{39}
}

func (x *AddFilmRequest) GetFilmData() *FilmToAdd {
	if x != nil {
		return x.FilmData
	}
	return nil
}

type AddFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFilmResponse) Reset() {
	*x = AddFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFilmResponse) ProtoMessage() {}

func (x *AddFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFilmResponse.ProtoReflect.Descriptor instead.
func (*AddFilmResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{40}
}

type FindFilmsShortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FindFilmsShortRequest) Reset() {
	*x = FindFilmsShortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFilmsShortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFilmsShortRequest) ProtoMessage() {}

func (x *FindFilmsShortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFilmsShortRequest.ProtoReflect.Descriptor instead.
func (*FindFilmsShortRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{41}
}

func (x *FindFilmsShortRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FindFilmsShortRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FindFilmsShortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FilmPreview `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *FindFilmsShortResponse) Reset() {
	*x = FindFilmsShortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFilmsShortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFilmsShortResponse) ProtoMessage() {}

func (x *FindFilmsShortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFilmsShortResponse.ProtoReflect.Descriptor instead.
func (*FindFilmsShortResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{42}
}

func (x *FindFilmsShortResponse) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

type FindFilmLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IsSerial    bool                   `protobuf:"varint,2,opt,name=is_serial,json=isSerial,proto3" json:"is_serial,omitempty"`
	Preview     string                 `protobuf:"bytes,3,opt,name=preview,proto3" json:"preview,omitempty"`
	Title       string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Director    string                 `protobuf:"bytes,5,opt,name=director,proto3" json:"director,omitempty"`
	AvgScore    float32                `protobuf:"fixed32,6,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
	ScoresCount uint64                 `protobuf:"varint,7,opt,name=scores_count,json=scoresCount,proto3" json:"scores_count,omitempty"`
	Duration    uint32                 `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
	AgeLimit    uint32                 `protobuf:"varint,9,opt,name=age_limit,json=ageLimit,proto3" json:"age_limit,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
	Genres      []*Genre               `protobuf:"bytes,12,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *FindFilmLong) Reset() {
	*x = FindFilmLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFilmLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFilmLong) ProtoMessage() {}

func (x *FindFilmLong) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFilmLong.ProtoReflect.Descriptor instead.
func (*FindFilmLong) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{43}
}

func (x *FindFilmLong) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FindFilmLong) GetIsSerial() bool {
	if x != nil {
		return x.IsSerial
	}
	return false
}

func (x *FindFilmLong) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *FindFilmLong) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FindFilmLong) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *FindFilmLong) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *FindFilmLong) GetScoresCount() uint64 {
	if x != nil {
		return x.ScoresCount
	}
	return 0
}

func (x *FindFilmLong) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FindFilmLong) GetAgeLimit() uint32 {
	if x != nil {
		return x.AgeLimit
	}
	return 0
}

func (x *FindFilmLong) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *FindFilmLong) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type FindFilmsLongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FindFilmLong `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
	Count uint32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FindFilmsLongResponse) Reset() {
	*x = FindFilmsLongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFilmsLongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFilmsLongResponse) ProtoMessage() {}

func (x *FindFilmsLongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFilmsLongResponse.ProtoReflect.Descriptor instead.
func (*FindFilmsLongResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{44}
}

func (x *FindFilmsLongResponse) GetFilms() []*FindFilmLong {
	if x != nil {
		return x.Films
	}
	return nil
}

func (x *FindFilmsLongResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FindActorsShortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FindActorsShortRequest) Reset() {
	*x = FindActorsShortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindActorsShortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindActorsShortRequest) ProtoMessage() {}

func (x *FindActorsShortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindActorsShortRequest.ProtoReflect.Descriptor instead.
func (*FindActorsShortRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{45}
}

func (x *FindActorsShortRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FindActorsShortRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FindActorsShortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actors []*ActorPreview `protobuf:"bytes,1,rep,name=actors,proto3" json:"actors,omitempty"`
}

func (x *FindActorsShortResponse) Reset() {
	*x = FindActorsShortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindActorsShortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindActorsShortResponse) ProtoMessage() {}

func (x *FindActorsShortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindActorsShortResponse.ProtoReflect.Descriptor instead.
func (*FindActorsShortResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{46}
}

func (x *FindActorsShortResponse) GetActors() []*ActorPreview {
	if x != nil {
		return x.Actors
	}
	return nil
}

type ActorPreviewLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Birthday   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Career     string                 `protobuf:"bytes,5,opt,name=career,proto3" json:"career,omitempty"`
	BirthPlace string                 `protobuf:"bytes,6,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
}

func (x *ActorPreviewLong) Reset() {
	*x = ActorPreviewLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorPreviewLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorPreviewLong) ProtoMessage() {}

func (x *ActorPreviewLong) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorPreviewLong.ProtoReflect.Descriptor instead.
func (*ActorPreviewLong) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{47}
}

func (x *ActorPreviewLong) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ActorPreviewLong) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActorPreviewLong) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ActorPreviewLong) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *ActorPreviewLong) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *ActorPreviewLong) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

type FindActorsLongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actors []*ActorPreviewLong `protobuf:"bytes,1,rep,name=actors,proto3" json:"actors,omitempty"`
	Count  uint32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FindActorsLongResponse) Reset() {
	*x = FindActorsLongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindActorsLongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindActorsLongResponse) ProtoMessage() {}

func (x *FindActorsLongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindActorsLongResponse.ProtoReflect.Descriptor instead.
func (*FindActorsLongResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{48}
}

func (x *FindActorsLongResponse) GetActors() []*ActorPreviewLong {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *FindActorsLongResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TopFilm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IsSerial bool   `protobuf:"varint,2,opt,name=is_serial,json=isSerial,proto3" json:"is_serial,omitempty"`
	Preview  string `protobuf:"bytes,3,opt,name=preview,proto3" json:"preview,omitempty"`
	Title    string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Data     string `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TopFilm) Reset() {
	*x = TopFilm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopFilm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopFilm) ProtoMessage() {}

func (x *TopFilm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopFilm.ProtoReflect.Descriptor instead.
func (*TopFilm) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{49}
}

func (x *TopFilm) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TopFilm) GetIsSerial() bool {
	if x != nil {
		return x.IsSerial
	}
	return false
}

func (x *TopFilm) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *TopFilm) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopFilm) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetTopFilmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTopFilmsRequest) Reset() {
	*x = GetTopFilmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopFilmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopFilmsRequest) ProtoMessage() {}

func (x *GetTopFilmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopFilmsRequest.ProtoReflect.Descriptor instead.
func (*GetTopFilmsRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{50}
}

type GetTopFilmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*TopFilm `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *GetTopFilmsResponse) Reset() {
	*x = GetTopFilmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopFilmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopFilmsResponse) ProtoMessage() {}

func (x *GetTopFilmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopFilmsResponse.ProtoReflect.Descriptor instead.
func (*GetTopFilmsResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{51}
}

func (x *GetTopFilmsResponse) GetFilms() []*TopFilm {
	if x != nil {
		return x.Films
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FilmUuid   string                 `protobuf:"bytes,2,opt,name=film_uuid,json=filmUuid,proto3" json:"film_uuid,omitempty"`
	AuthorUuid string                 `protobuf:"bytes,3,opt,name=author_uuid,json=authorUuid,proto3" json:"author_uuid,omitempty"`
	Author     string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Text       string                 `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Score      uint32                 `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	AddedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{52}
}

func (x *Comment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Comment) GetFilmUuid() string {
	if x != nil {
		return x.FilmUuid
	}
	return ""
}

func (x *Comment) GetAuthorUuid() string {
	if x != nil {
		return x.AuthorUuid
	}
	return ""
}

func (x *Comment) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Comment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Comment) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Comment) GetAddedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AddedAt
	}
	return nil
}

type CommentToAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmUuid   string `protobuf:"bytes,1,opt,name=film_uuid,json=filmUuid,proto3" json:"film_uuid,omitempty"`
	AuthorUuid string `protobuf:"bytes,2,opt,name=author_uuid,json=authorUuid,proto3" json:"author_uuid,omitempty"`
	Text       string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Score      uint32 `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *CommentToAdd) Reset() {
	*x = CommentToAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentToAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentToAdd) ProtoMessage() {}

func (x *CommentToAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentToAdd.ProtoReflect.Descriptor instead.
func (*CommentToAdd) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{53}
}

func (x *CommentToAdd) GetFilmUuid() string {
	if x != nil {
		return x.FilmUuid
	}
	return ""
}

func (x *CommentToAdd) GetAuthorUuid() string {
	if x != nil {
		return x.AuthorUuid
	}
	return ""
}

func (x *CommentToAdd) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CommentToAdd) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CommentToRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmUuid   string `protobuf:"bytes,1,opt,name=film_uuid,json=filmUuid,proto3" json:"film_uuid,omitempty"`
	AuthorUuid string `protobuf:"bytes,2,opt,name=author_uuid,json=authorUuid,proto3" json:"author_uuid,omitempty"`
}

func (x *CommentToRemove) Reset() {
	*x = CommentToRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentToRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentToRemove) ProtoMessage() {}

func (x *CommentToRemove) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentToRemove.ProtoReflect.Descriptor instead.
func (*CommentToRemove) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{54}
}

func (x *CommentToRemove) GetFilmUuid() string {
	if x != nil {
		return x.FilmUuid
	}
	return ""
}

func (x *CommentToRemove) GetAuthorUuid() string {
	if x != nil {
		return x.AuthorUuid
	}
	return ""
}

type AddCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *CommentToAdd `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{55}
}

func (x *AddCommentRequest) GetComment() *CommentToAdd {
	if x != nil {
		return x.Comment
	}
	return nil
}

type AddCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCommentResponse) Reset() {
	*x = AddCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentResponse) ProtoMessage() {}

func (x *AddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentResponse.ProtoReflect.Descriptor instead.
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{56}
}

type RemoveCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *CommentToRemove `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *RemoveCommentRequest) Reset() {
	*x = RemoveCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentRequest) ProtoMessage() {}

func (x *RemoveCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentRequest.ProtoReflect.Descriptor instead.
func (*RemoveCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{57}
}

func (x *RemoveCommentRequest) GetComment() *CommentToRemove {
	if x != nil {
		return x.Comment
	}
	return nil
}

type RemoveCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCommentResponse) Reset() {
	*x = RemoveCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_films_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentResponse) ProtoMessage() {}

func (x *RemoveCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_films_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentResponse.ProtoReflect.Descriptor instead.
func (*RemoveCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_films_proto_rawDescGZIP(), []int{58}
}

var File_proto_films_proto protoreflect.FileDescriptor

var file_proto_films_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x02,
	0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x07, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x2f, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0xab, 0x03, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22,
	0xa8, 0x02, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x36, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x70, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x5f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4e, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x19, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x18, 0x41, 0x6c,
	0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x48, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x18, 0x46, 0x69, 0x6c,
	0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x19, 0x46, 0x69, 0x6c,
	0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22,
	0x2c, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x17, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c,
	0x6d, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x43, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x29, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x45, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x50, 0x75, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x75, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x51, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x6d, 0x73, 0x22, 0x3a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c,
	0x6d, 0x73, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x42, 0x79,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c,
	0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x22,
	0x43, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x22, 0xe0, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x3a, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x6f,
	0x75, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0xa8, 0x01, 0x0a,
	0x09, 0x46, 0x69, 0x6c, 0x6d, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x36, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x52, 0x08, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x15,
	0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x16, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6d,
	0x73, 0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x4c, 0x6f,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x22, 0x5a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x4c, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x4c, 0x6f, 0x6e, 0x67, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x16,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x17,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x16, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x6e, 0x67,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e,
	0x0a, 0x07, 0x54, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x46, 0x69,
	0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x6d, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x76, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4a, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdf, 0x0e, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x5c,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x42, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x6d,
	0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42,
	0x79, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0b, 0x50, 0x75, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d,
	0x73, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x42, 0x79,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c,
	0x6d, 0x73, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x6d, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x4c, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x1e,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x53, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x6e, 0x67,
	0x12, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x46, 0x69,
	0x6c, 0x6d, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_films_proto_rawDescOnce sync.Once
	file_proto_films_proto_rawDescData = file_proto_films_proto_rawDesc
)

func file_proto_films_proto_rawDescGZIP() []byte {
	file_proto_films_proto_rawDescOnce.Do(func() {
		file_proto_films_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_films_proto_rawDescData)
	})
	return file_proto_films_proto_rawDescData
}

var file_proto_films_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_proto_films_proto_goTypes = []interface{}{
	(*FilmPreview)(nil),                 // 0: session.FilmPreview
	(*Episode)(nil),                     // 1: session.Episode
	(*Season)(nil),                      // 2: session.Season
	(*Genre)(nil),                       // 3: session.Genre
	(*FilmData)(nil),                    // 4: session.FilmData
	(*ActorData)(nil),                   // 5: session.ActorData
	(*ActorPreview)(nil),                // 6: session.ActorPreview
	(*StatusMessage)(nil),               // 7: session.StatusMessage
	(*AllFilmsPreviewsRequest)(nil),     // 8: session.AllFilmsPreviewsRequest
	(*AllFilmsPreviewsResponse)(nil),    // 9: session.AllFilmsPreviewsResponse
	(*FilmDataByUuidRequest)(nil),       // 10: session.FilmDataByUuidRequest
	(*FilmDataByUuidResponse)(nil),      // 11: session.FilmDataByUuidResponse
	(*FilmPreviewByUuidRequest)(nil),    // 12: session.FilmPreviewByUuidRequest
	(*FilmPreviewByUuidResponse)(nil),   // 13: session.FilmPreviewByUuidResponse
	(*AllFilmCommentsRequest)(nil),      // 14: session.AllFilmCommentsRequest
	(*AllFilmCommentsResponse)(nil),     // 15: session.AllFilmCommentsResponse
	(*AllFilmActorsRequest)(nil),        // 16: session.AllFilmActorsRequest
	(*AllFilmActorsResponse)(nil),       // 17: session.AllFilmActorsResponse
	(*RemoveFilmByUuidRequest)(nil),     // 18: session.RemoveFilmByUuidRequest
	(*RemoveFilmByUuidResponse)(nil),    // 19: session.RemoveFilmByUuidResponse
	(*ActorDataByUuidRequest)(nil),      // 20: session.ActorDataByUuidRequest
	(*ActorDataByUuidResponse)(nil),     // 21: session.ActorDataByUuidResponse
	(*ActorsByFilmRequest)(nil),         // 22: session.ActorsByFilmRequest
	(*ActorsByFilmResponse)(nil),        // 23: session.ActorsByFilmResponse
	(*PutFavoriteRequest)(nil),          // 24: session.PutFavoriteRequest
	(*PutFavoriteResponse)(nil),         // 25: session.PutFavoriteResponse
	(*DeleteFavoriteRequest)(nil),       // 26: session.DeleteFavoriteRequest
	(*DeleteFavoriteResponse)(nil),      // 27: session.DeleteFavoriteResponse
	(*GetAllFavoriteFilmsRequest)(nil),  // 28: session.GetAllFavoriteFilmsRequest
	(*GetAllFavoriteFilmsResponse)(nil), // 29: session.GetAllFavoriteFilmsResponse
	(*GetAllFilmsByGenreRequest)(nil),   // 30: session.GetAllFilmsByGenreRequest
	(*GetAllFilmsByGenreResponse)(nil),  // 31: session.GetAllFilmsByGenreResponse
	(*GetAllGenresRequest)(nil),         // 32: session.GetAllGenresRequest
	(*GenreFilms)(nil),                  // 33: session.GenreFilms
	(*GetAllGenresResponse)(nil),        // 34: session.GetAllGenresResponse
	(*FilmDataToAdd)(nil),               // 35: session.FilmDataToAdd
	(*ActorDataToAdd)(nil),              // 36: session.ActorDataToAdd
	(*DirectorDataToAdd)(nil),           // 37: session.DirectorDataToAdd
	(*FilmToAdd)(nil),                   // 38: session.FilmToAdd
	(*AddFilmRequest)(nil),              // 39: session.AddFilmRequest
	(*AddFilmResponse)(nil),             // 40: session.AddFilmResponse
	(*FindFilmsShortRequest)(nil),       // 41: session.FindFilmsShortRequest
	(*FindFilmsShortResponse)(nil),      // 42: session.FindFilmsShortResponse
	(*FindFilmLong)(nil),                // 43: session.FindFilmLong
	(*FindFilmsLongResponse)(nil),       // 44: session.FindFilmsLongResponse
	(*FindActorsShortRequest)(nil),      // 45: session.FindActorsShortRequest
	(*FindActorsShortResponse)(nil),     // 46: session.FindActorsShortResponse
	(*ActorPreviewLong)(nil),            // 47: session.ActorPreviewLong
	(*FindActorsLongResponse)(nil),      // 48: session.FindActorsLongResponse
	(*TopFilm)(nil),                     // 49: session.TopFilm
	(*GetTopFilmsRequest)(nil),          // 50: session.GetTopFilmsRequest
	(*GetTopFilmsResponse)(nil),         // 51: session.GetTopFilmsResponse
	(*Comment)(nil),                     // 52: session.Comment
	(*CommentToAdd)(nil),                // 53: session.CommentToAdd
	(*CommentToRemove)(nil),             // 54: session.CommentToRemove
	(*AddCommentRequest)(nil),           // 55: session.AddCommentRequest
	(*AddCommentResponse)(nil),          // 56: session.AddCommentResponse
	(*RemoveCommentRequest)(nil),        // 57: session.RemoveCommentRequest
	(*RemoveCommentResponse)(nil),       // 58: session.RemoveCommentResponse
	(*timestamppb.Timestamp)(nil),       // 59: google.protobuf.Timestamp
}
var file_proto_films_proto_depIdxs = []int32{
	1,  // 0: session.Season.episodes:type_name -> session.Episode
	59, // 1: session.FilmData.date:type_name -> google.protobuf.Timestamp
	3,  // 2: session.FilmData.genres:type_name -> session.Genre
	2,  // 3: session.FilmData.seasons:type_name -> session.Season
	59, // 4: session.ActorData.birthday:type_name -> google.protobuf.Timestamp
	0,  // 5: session.ActorData.films_previews:type_name -> session.FilmPreview
	0,  // 6: session.AllFilmsPreviewsResponse.films:type_name -> session.FilmPreview
	4,  // 7: session.FilmDataByUuidResponse.film_data:type_name -> session.FilmData
	0,  // 8: session.FilmPreviewByUuidResponse.film_preview:type_name -> session.FilmPreview
	52, // 9: session.AllFilmCommentsResponse.comments:type_name -> session.Comment
	6,  // 10: session.AllFilmActorsResponse.actor_previews:type_name -> session.ActorPreview
	5,  // 11: session.ActorDataByUuidResponse.actor:type_name -> session.ActorData
	6,  // 12: session.ActorsByFilmResponse.actors:type_name -> session.ActorPreview
	0,  // 13: session.GetAllFavoriteFilmsResponse.films:type_name -> session.FilmPreview
	0,  // 14: session.GetAllFilmsByGenreResponse.films:type_name -> session.FilmPreview
	0,  // 15: session.GenreFilms.films:type_name -> session.FilmPreview
	33, // 16: session.GetAllGenresResponse.genres:type_name -> session.GenreFilms
	59, // 17: session.FilmDataToAdd.publishedAt:type_name -> google.protobuf.Timestamp
	2,  // 18: session.FilmDataToAdd.seasons:type_name -> session.Season
	59, // 19: session.ActorDataToAdd.birthdayAt:type_name -> google.protobuf.Timestamp
	59, // 20: session.DirectorDataToAdd.birthday:type_name -> google.protobuf.Timestamp
	35, // 21: session.FilmToAdd.filmData:type_name -> session.FilmDataToAdd
	36, // 22: session.FilmToAdd.actors:type_name -> session.ActorDataToAdd
	37, // 23: session.FilmToAdd.director:type_name -> session.DirectorDataToAdd
	38, // 24: session.AddFilmRequest.filmData:type_name -> session.FilmToAdd
	0,  // 25: session.FindFilmsShortResponse.films:type_name -> session.FilmPreview
	59, // 26: session.FindFilmLong.date:type_name -> google.protobuf.Timestamp
	3,  // 27: session.FindFilmLong.genres:type_name -> session.Genre
	43, // 28: session.FindFilmsLongResponse.films:type_name -> session.FindFilmLong
	6,  // 29: session.FindActorsShortResponse.actors:type_name -> session.ActorPreview
	59, // 30: session.ActorPreviewLong.birthday:type_name -> google.protobuf.Timestamp
	47, // 31: session.FindActorsLongResponse.actors:type_name -> session.ActorPreviewLong
	49, // 32: session.GetTopFilmsResponse.films:type_name -> session.TopFilm
	59, // 33: session.Comment.added_at:type_name -> google.protobuf.Timestamp
	53, // 34: session.AddCommentRequest.comment:type_name -> session.CommentToAdd
	54, // 35: session.RemoveCommentRequest.comment:type_name -> session.CommentToRemove
	8,  // 36: session.Films.GetAllFilmsPreviews:input_type -> session.AllFilmsPreviewsRequest
	10, // 37: session.Films.GetFilmDataByUuid:input_type -> session.FilmDataByUuidRequest
	12, // 38: session.Films.GetFilmPreviewByUuid:input_type -> session.FilmPreviewByUuidRequest
	18, // 39: session.Films.RemoveFilmByUuid:input_type -> session.RemoveFilmByUuidRequest
	20, // 40: session.Films.GetActorDataByUuid:input_type -> session.ActorDataByUuidRequest
	22, // 41: session.Films.GetActorsByFilm:input_type -> session.ActorsByFilmRequest
	24, // 42: session.Films.PutFavorite:input_type -> session.PutFavoriteRequest
	26, // 43: session.Films.DeleteFavorite:input_type -> session.DeleteFavoriteRequest
	28, // 44: session.Films.GetAllFavoriteFilms:input_type -> session.GetAllFavoriteFilmsRequest
	30, // 45: session.Films.GetAllFilmsByGenre:input_type -> session.GetAllFilmsByGenreRequest
	32, // 46: session.Films.GetAllGenres:input_type -> session.GetAllGenresRequest
	39, // 47: session.Films.AddFilm:input_type -> session.AddFilmRequest
	41, // 48: session.Films.FindFilmsShort:input_type -> session.FindFilmsShortRequest
	41, // 49: session.Films.FindFilmsLong:input_type -> session.FindFilmsShortRequest
	41, // 50: session.Films.FindSerialsShort:input_type -> session.FindFilmsShortRequest
	41, // 51: session.Films.FindSerialsLong:input_type -> session.FindFilmsShortRequest
	45, // 52: session.Films.FindActorsShort:input_type -> session.FindActorsShortRequest
	45, // 53: session.Films.FindActorsLong:input_type -> session.FindActorsShortRequest
	50, // 54: session.Films.GetTopFilms:input_type -> session.GetTopFilmsRequest
	14, // 55: session.Films.GetAllFilmComments:input_type -> session.AllFilmCommentsRequest
	55, // 56: session.Films.AddComment:input_type -> session.AddCommentRequest
	57, // 57: session.Films.RemoveComment:input_type -> session.RemoveCommentRequest
	9,  // 58: session.Films.GetAllFilmsPreviews:output_type -> session.AllFilmsPreviewsResponse
	11, // 59: session.Films.GetFilmDataByUuid:output_type -> session.FilmDataByUuidResponse
	13, // 60: session.Films.GetFilmPreviewByUuid:output_type -> session.FilmPreviewByUuidResponse
	19, // 61: session.Films.RemoveFilmByUuid:output_type -> session.RemoveFilmByUuidResponse
	21, // 62: session.Films.GetActorDataByUuid:output_type -> session.ActorDataByUuidResponse
	23, // 63: session.Films.GetActorsByFilm:output_type -> session.ActorsByFilmResponse
	25, // 64: session.Films.PutFavorite:output_type -> session.PutFavoriteResponse
	27, // 65: session.Films.DeleteFavorite:output_type -> session.DeleteFavoriteResponse
	29, // 66: session.Films.GetAllFavoriteFilms:output_type -> session.GetAllFavoriteFilmsResponse
	31, // 67: session.Films.GetAllFilmsByGenre:output_type -> session.GetAllFilmsByGenreResponse
	34, // 68: session.Films.GetAllGenres:output_type -> session.GetAllGenresResponse
	40, // 69: session.Films.AddFilm:output_type -> session.AddFilmResponse
	42, // 70: session.Films.FindFilmsShort:output_type -> session.FindFilmsShortResponse
	44, // 71: session.Films.FindFilmsLong:output_type -> session.FindFilmsLongResponse
	42, // 72: session.Films.FindSerialsShort:output_type -> session.FindFilmsShortResponse
	44, // 73: session.Films.FindSerialsLong:output_type -> session.FindFilmsLongResponse
	46, // 74: session.Films.FindActorsShort:output_type -> session.FindActorsShortResponse
	48, // 75: session.Films.FindActorsLong:output_type -> session.FindActorsLongResponse
	51, // 76: session.Films.GetTopFilms:output_type -> session.GetTopFilmsResponse
	15, // 77: session.Films.GetAllFilmComments:output_type -> session.AllFilmCommentsResponse
	56, // 78: session.Films.AddComment:output_type -> session.AddCommentResponse
	58, // 79: session.Films.RemoveComment:output_type -> session.RemoveCommentResponse
	58, // [58:80] is the sub-list for method output_type
	36, // [36:58] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_proto_films_proto_init() }
func file_proto_films_proto_init() {
	if File_proto_films_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_films_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Season); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmsPreviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmsPreviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmDataByUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmDataByUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmPreviewByUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmPreviewByUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmActorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFilmActorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFilmByUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFilmByUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorDataByUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorDataByUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorsByFilmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorsByFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutFavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutFavoriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFavoriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFavoriteFilmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFavoriteFilmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFilmsByGenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFilmsByGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGenresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenreFilms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGenresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmDataToAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorDataToAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectorDataToAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmToAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFilmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFilmsShortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFilmsShortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFilmLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFilmsLongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindActorsShortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindActorsShortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorPreviewLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindActorsLongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopFilm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopFilmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopFilmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentToAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentToRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_films_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_films_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_films_proto_goTypes,
		DependencyIndexes: file_proto_films_proto_depIdxs,
		MessageInfos:      file_proto_films_proto_msgTypes,
	}.Build()
	File_proto_films_proto = out.File
	file_proto_films_proto_rawDesc = nil
	file_proto_films_proto_goTypes = nil
	file_proto_films_proto_depIdxs = nil
}
